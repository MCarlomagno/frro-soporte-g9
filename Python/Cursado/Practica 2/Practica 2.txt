				### Ejercicio 1  ###

print("Escribir una clase llamada rectangulo que contenga una base y una altura,"
      "y que contenga un metodo que devuelva el area del rectangulo.")
print()
class Rectangulo():
    def __init__(self,bas,altu):
        self.base = bas
        self.altura = altu

    def area(self,bas,altu):
        print("El area del rectangulo es:" , bas * altu)

bas = int(input("Ingrese la base del rectangulo: "))
altu = int(input("Ingrese la altura del rectangulo: "))

print()
rectan = Rectangulo(bas,altu)
print(rectan.area(bas,altu))



				### Ejercicio 2  ###
from math import pi

class Circulo():
    def __init__(self,rad):
        self.radio = rad

    def area(self,rad):
        self.area = rad * rad * pi
        print("El area del circulo con radio",rad,"es:",self.area)

    def perimetro(self,rad):
        self.perime = rad * 2 * 3.141592
        print("El perimeto del circulo con radio",rad,"es:",self.perime)

rad = int(input("Ingrese el radio del circulo:"))

circu = Circulo(rad)
circu.area (rad)
circu.perimetro(rad)



				### Ejercicio 3  ###

import random

class Persona():
    def __init__(self,nomb,edad,sexo,peso,altura):
        self.nombre = nomb
        self.edad = edad
        self.sexo = sexo
        self.peso = peso
        self.altura = altura
        self.dni = random.randint (0,99999999)

    def es_mayor_edad(self):
        if (self.edad >= 18):
            print(self.nombre ,"es mayor de edad")
        else:
            print(self.nombre, "no es mayor de edad")

    def print_data(self):
        print("Nombre: ",self.nombre)
        print("Edad:   ",self.edad)
        print("Sexo:   ",self.sexo)
        print("Peso:   ",self.peso)
        print("Altura: ",self.altura)


    def generar_dni(self):
        print("El DNI de",self.nombre,"es:",self.dni)

pedro = Persona("Pedro",19,"H",89,178)
julia = Persona("Julia",17,"M",67,156)

pedro.es_mayor_edad()
julia.es_mayor_edad()
print()

pedro.print_data()
print()
julia.print_data()
print()

pedro.generar_dni()
julia.generar_dni()
print()



				### Ejercicio 4  ###

class Estudiante(Persona):
    def __init__(self, carre, añoI,cantMat,cantMatAprob,cantEstuds):
        self.carrera = carre
        self.añoIngreso = añoI
        self.cantMaterias = cantMat
        self.cantMatAprob = cantMatAprob
        self.cantEstudiantes = cantEstuds


    def avance(self):
        print(self.cantMatAprob * 100 / self.cantMaterias,"%")
        #print("El porcentaje de materias aprobadas por", self.nombre, "es:", self.cantMatAprob * 100 / self.cantMaterias,"%")
        #COMO ME COMUNICO CON Persona PARA PEDIRLE EL ATRIBUTO nombre Y PODER USARLO ACA??
        #PORQUE SI USO self.nombre ME DA ERROR PORQUE EL METODO self.nombre ESTA EN Persona, NO EN Estudiante.

    def edad_ingreso(self):
        print()

pedro = Estudiante("Ingenieria en Sistemas",2013,36,22,40)
julia = Estudiante("Abogacia",2014,32,15,90)

print("El porcentaje de materias probadas de Pedro es:")
pedro.avance()
print()

print("El porcentaje de materias probadas de Julia es:")
julia.avance()
print()


				### Ejercicio 5  ###

lis = [pedro,julia]


diccionario = {
    lis[0].carrera : [lis[0].cantEstudiantes],
    lis[1].carrera : [lis[1].cantEstudiantes]
}

print(("Carrera y cant. de estudiantes:"))
print(diccionario.items())

#No se como iterar la lista para ir agregando los elementos al diccionario
#   for i in len(lis):
#       diccionario ={
#            lis[i].carre : lis[i].cantEstudiantes
#           }
#       print("Numero de iteracion")
#
# Y despues deberia trabajar con la funcion




